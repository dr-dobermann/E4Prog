?align as_is
Task description:
====================

?align fill
This task was taken from the book Etudes for Programmers by Charles Wetherell
?footnote 1
(c) 1987 by Prentice Hall, Inc., Englewood Cliffs, New Jersey 07632.
This is a third task from the book.

The task is about creating a text formatter which could process an input text stream and provide an 
output text stream formatted according to the formatting commands placed in an input stream.
It's necessary to create a visualization tool for presenting the results.

Every command starts at first position of input steam string from letter "?".


?align as_is
Notes:
===================
1. The task conditions were little bit changed from the original assignment 

  1.1. Alignment sets as as_is, left, right, centered and fill(proportional)
  
  1.2. Command ?center is deleted as excessive one
  
2. Double empty lines in input stream closes current paragraph. More 
   single line in a row just ignored.
   
3. Single empty line closes current sentence. 

4. Every command takes one line. Any information after the command
   will be ignored.
   The line which holds the command is not counted as an empty line.
   
5. Footnote should be on the same page as the paragraph it's related to. 
   If there is no space for the whole footnote, part of it moves to the
   next page except one last line. 
   If there is still no enough space on the page, part of
   the paragraph up to the line with link to the footnote also moves to the next page.
   
6. Page could not become wider than it was initially set. If a such situation
   appears the new page starts.

7. Footnotes takes initial width of the page (max width) and does not uses
   related paragraph width.


Strategy:
===================

1. Stream of input lines goes through few mappers and as a result
   we would have a list of formatted lines with linked to them decorations.
   
   1.1. First map converts commands out and transforms the raw input lines into ParaLines
        by extracting decoration commands and anchoring them to the defined
        positions.
   
   1.2. The second map formats elements of the page from given ParaLines
        based on the current processor state.
   
   1.3. The last map creates pages from given pages elements and stores them 



Command list:
====================
-----------------------------------------------------------------------------------
name        | parameters (values) _ defaults _                         | closes the
description |                                                          | paragraph
-----------------------------------------------------------------------------------
size         width height _ 72 40 _                                      yes
Sets the page size

align        type (as_is, left, right, 
                    center, fill)            _ left _                    yes
Sets paragraphs align mode.
as_is                 -- text presented as is 
left, center, right   -- eliminates all extra whitespaces and align 
                         the text according settings
fill                  -- text placed from left to right with no trail 
                         or leading spaces. Extra spaces are added 
                         between the words where necessary
                         
par          indent spacesB spaces A _ 3 0 0 _                           yes
Starts new paragraph with given indent and spaces intervals 
before and after paragraphs

margin       left right                                                  yes
Sets the margins from left and rights for next paragraphs 

interval     lines _ 1 _
Sets interval between the paragraph lines                                yes

feedlines    lines_count                                                 yes
Feed lines_count empty lines with given interval. 
Does not add empty lines on a new page start.

feed          lines _ 0 _                                                yes
Feed exactly lines lines ignoring the interval settings.
Does not add empty lines on a new page start.  

newpage                                                                  yes
Starts new page

left          n                                                          yes
Checks if there are at least n lines of the page. 
If there are less that n lines, then next page starts.
If there are more that n lines left on the page, the command is ignored

header        height pn_line pn_position                                 no
Sets page header for next pages in height lines. 
Page number printed in pn_line on pn_position (left, right, center).
Command with 0 height disables the page headers for next pages

pnum          n                                                          no
Sets current page number counter

pb                                                                       yes
Ends the current paragraph  

footnote      nstrings                                                   no
Adds a footnote to the page. Footnote is formed from the next nstrings. 
A new footnote pops up the existed ones.
If there is no place to put the whole footnote on the page, 
the rest of it moves to the next page

alias         new_name old_name                                          no
Add alias for the symbol to mask it further

Decoration commands:
===================
?align fill
There are could be text decoration commands inside the paragraph.
They look as &<command_name>+/-. 
<command_name> could consists of a few commands combined
For some commands it could be possible to provide additional information in 
{} after the starting command.
?footnote 1
Only realized for footnotes yet.
---------------------------------------------------------------------------
code     |  description
---------------------------------------------------------------------------
B           bold
I           italic
U           underline
X           top index
x           bottom index

